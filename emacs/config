;; -*-Lisp-*-
;;
;; A few reminders:
;;  M-/    code-completion (hippie-expand)
;;  M-s o  list all lines that match (occur)


;;;; Do NOT edit this ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(browse-url-browser-function (quote browse-url-generic))
 '(browse-url-generic-program "sensible-browser")
 '(edts-man-root "/home/harriesk/.emacs.d/edts/doc/R7B")
 '(epg-gpg-program "/usr/bin/gpg2")
 '(fic-highlighted-words (quote ("FIXME" "TODO" "BUG" "KLUDGE" "XXX" "HACK")))
 '(gnutls-verify-error t)
 '(haskell-mode-hook
   (quote
    (imenu-add-menubar-index turn-on-eldoc-mode turn-on-haskell-indentation
                             (lambda nil
                               (ghc-init)))) t)
 '(haskell-tags-on-save t)
 '(hs-hide-comments-when-hiding-all nil)
 '(indent-tabs-mode nil)
 '(inhibit-startup-screen t)
 '(mouse-wheel-scroll-amount (quote (1 ((shift) . 5) ((control)))))
 '(package-archives
   (quote
    (("melpa-stable" . "https://stable.melpa.org/packages/")
     ("melpa" . "https://melpa.org/packages/")
     ("gnu" . "https://elpa.gnu.org/packages/"))))
 '(require-final-newline t)
 '(savehist-mode t)
 '(show-paren-mode t)
 '(tool-bar-mode nil)
 '(truncate-lines t))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:family "Hack" :foundry "bitstream" :slant normal :weight normal :height 98 :width normal))))
 '(hideshowvis-hidable-face ((t (:foreground "#888"))))
 '(hs-face ((t (:background "#ff8" :slant italic :height 0.8))))
 '(hs-fringe-face ((t (:background "#ff8" :foreground "#888")))))



;;;; Edit this instead ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(require 'package)
(package-initialize)
(load-file "~/.config/emacs/myfunctions.el")

;;;; Install missing packages ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(or (file-exists-p package-user-dir) (package-refresh-contents))

(ensure-package-installed 'edts
                          'evil
                          'fic-mode
                          'helm
                          'hideshowvis
                          'magit)

;;;; All packages should be available at this point ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(package-initialize)
(require 'evil)
(require 'helm-config)

(evil-mode t)
(helm-mode t)
;; hide-show-mode (folding)
(add-hook 'prog-mode-hook #'hs-minor-mode)
(add-hook 'prog-mode-hook #'hideshowvis-minor-mode)
(hideshowvis-symbols)

(server-start)

;; custom key-bindings
(global-set-key (kbd "C-x g") 'magit-status)
(global-set-key (kbd "M-/") 'hippie-expand)


(add-hook 'erlang-mode-hook 'my-erlang-mode-hook)
(defun my-erlang-mode-hook ()
  (setq hs-special-modes-alist
	(cons '(erlang-mode
		"^\\([a-z][a-zA-Z0-9_]*\\|'[^\n']*[^\\]'\\)\\s *(" nil "%"
		erlang-end-of-clause) hs-special-modes-alist))
  (hs-minor-mode 1)
  (define-key evil-motion-state-map "K" 'erlang-man-function))

(add-hook 'after-init-hook 'my-after-init-hook)
(defun my-after-init-hook ()
    (require 'edts-start))
